name: Run ASV
on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: "20 * * * *"

env:
  ENV_FILE: environment.yml
  PANDAS_CI: 1
  # Results and other data are stored away from the main branch.
  # This keeps the main branch clean and allows us to clear out
  # objects / history after being built up for long periods of time.
  BRANCH_NAME: test

permissions:
  contents: read

jobs:
  check-new-commit:
    name: Check Latest Commit
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash -el {0}
    permissions:
      contents: write
    outputs:
      new_commit: ${{ steps.new-commit.outputs.new_commit }}
    steps:
      # In order to run pandas' actions, we have to checkout into the root directory.
      - name: Checkout pandas
        uses: actions/checkout@v4
        with:
          repository: pandas-dev/pandas
          fetch-depth: 0

      - name: Checkout asv-runner results branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH_NAME }}
          path: asv-runner/

      - name: Compare Commit SHAs
        id: new-commit
        run: |
          if [ "$(git rev-parse HEAD)" = "$(cat asv-runner/data/latest_sha.txt)" ]; then
            echo "new_commit=no"
            echo "new_commit=no" >> "$GITHUB_OUTPUT"
          else
            echo "new_commit=yes"
            echo "new_commit=yes" >> "$GITHUB_OUTPUT"
          fi
          echo "$(git rev-parse HEAD)" > asv-runner/data/latest_sha.txt

#      # Prevent another job from kicking off and running on this commit
#      - name: Update latest_sha.txt
#        if: ${{ steps.new-commit.outputs.new_commit == 'yes' }}
#        uses: stefanzweifel/git-auto-commit-action@v5
#        with:
#          commit_message: Update latest SHA
#          branch: ${{ env.BRANCH_NAME }}
#          repository: asv-runner
#          file_pattern: 'data/latest_sha.txt'

      - name: Move results directory
        run: |
          mv asv-runner/data/results asv_bench/results

      - name: Set up Conda
        uses: ./.github/actions/setup-conda

      - name: Build pandas
        uses: ./.github/actions/build_pandas

      - name: Run ASV Benchmarks
        run: |
          cd asv_bench
          asv machine --machine=asvrunner --yes
          asv run --machine=asvrunner --python=same --set-commit-hash=$(git rev-parse HEAD) -b ^groupby.GroupByCythonAgg 
          asv publish
          # Move results to a fixed location
          cp results/asvrunner/$(git rev-parse --short=8 HEAD)*.json results.json

      - name: Process ASV results
        run: |
          python asv-runner/ci/process_results.py --input-path=asv_bench/results.json --output-path=asv-runner/data
          mv --force html/ ../asv-runner/docs

      - name: Commit results
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Results
          branch: ${{ env.BRANCH_NAME }}
          repository: asv-runner
          file_pattern: 'data/results.parquet data/results/ docs/'

      # TODO: Remove
      # Prevent another job from kicking off and running on this commit
      - name: Update latest_sha.txt
        if: ${{ steps.new-commit.outputs.new_commit == 'yes' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Update latest SHA
          branch: ${{ env.BRANCH_NAME }}
          repository: asv-runner
          file_pattern: 'data/latest_sha.txt'
